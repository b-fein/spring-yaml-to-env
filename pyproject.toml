# SPDX-FileCopyrightText: 2024 Benedikt Fein
#
# SPDX-License-Identifier: EUPL-1.2

[project]
name = "spring-yaml-to-env"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.11,<4"
dependencies = [
    "PyYAML~=6.0.0",
]

[dependency-groups]
dev = [
    "darglint2~=1.8",
    "isort~=6.0",
    "mypy~=1.14",
    "pyupgrade~=3.19",
    "reuse~=6.0",
    "ruff~=0.8",
    "types-PyYAML~=6.0",
]
test = [
    "coverage~=7.6",
    "pytest~=8.3",
    "pytest-cov~=6.0",
    "pytest-sugar~=1.0",
]


[tool.uv]
default-groups = ["dev", "test"]


[tool.isort]
profile = "black"
line_length=88
multi_line_output=3
include_trailing_comma=true
indent='    '


[tool.mypy]
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true


[tool.ruff]
line-length = 88
output-format = "full"
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
# base set of ignored rules, to be adapted as needed
# https://beta.ruff.rs/docs/rules/
ignore = [
    "ANN003", # typing annotations for kwargs, self, cls not needed
    "COM", # trailing commas -> black
    "D", # documentation
    "E", # code style -> black
    "I", # import order -> isort
    "ISC",
    "T20", # allow print statements
]
exclude = [
    "docs",
    ".venv",
    "venv",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "PLR", # pylint refactoring suggestions
    "S101" # assertions
]


[tool.coverage.run]
branch = true
source = ["spring_yaml_to_env", "tests"]
omit = ["tests/fixtures/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "cov_html"


[tool.pytest.ini_options]
testpaths = [
    "tests",
]


[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
